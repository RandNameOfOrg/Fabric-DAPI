plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
    id 'com.modrinth.minotaur' version '2.+'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url = "https://maven.fabricmc.net/" }
}

dependencies {
    // Minecraft и Yarn
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Fabric Loader и API
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJavaVersion)
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {
        // Укажите сюда репозиторий для публикации (например, Modrinth или Maven).
    }
}

modrinth {
    token = project.findProperty("modrinth_token") ?: System.getenv("MODRINTH_TOKEN")
    projectId = "ВАШ_PROJECT_ID"
    versionNumber = project.version
    versionName = "DAPI v${project.version}"
    versionType = "alpha" // либо "beta", "alpha", "release"

    uploadFile = remapJar
    gameVersions = ["1.21.4"]
    loaders = ["fabric"]
    changelog = file("CHANGELOG.md").exists() ? file("CHANGELOG.md").text : "Auto deploy"
    dependencies {
        optional.project "fabric-api" // если есть
    }
}

